---
name: generate-doc

on:
  workflow_dispatch: {}
  push:
    branches: [main]

jobs:
  check-generate-doc:
    runs-on: ubuntu-latest
    permissions: {}
    outputs:
      pr_url: ${{fromJson(steps.pr.outputs.payload).html_url}}
      pr_number: ${{steps.pr.outputs.number}}
      ignored: |
        ${{fromJson(steps.pr.outputs.payload).user.login == 'suzuki-shunsuke-app[bot]' && steps.pr.outputs.title == 'docs: generate document by yodoc'}}
    steps:
      - uses: suzuki-shunsuke/gh-find-current-pr@52df560f9181a2d5aaffd3b6934f5921b48920f4
        id: pr
        with:
          state: closed
      - run: |
          echo "LOGIN: $LOGIN"
          echo "TITLE: $TITLE"
          echo "PR URL: $PR_URL"
          echo "PR Number: $PR_NUMBER"
        env:
          LOGIN: ${{fromJson(steps.pr.outputs.payload).user.login}}
          TITLE: ${{steps.pr.outputs.title}}
          PR_NUMBER: ${{steps.pr.outputs.number}}
          PR_URL: ${{fromJson(steps.pr.outputs.payload).html_url}}
  generate-doc:
    runs-on: ubuntu-latest
    needs: check-generate-doc
    permissions:
      contents: write
      pull-requests: write
    # prevent infinite loop
    if: needs.check-generate-doc.outputs.ignored != 'true'
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: suzuki-shunsuke/gh-find-current-pr@52df560f9181a2d5aaffd3b6934f5921b48920f4
        id: pr
        with:
          state: closed
      - uses: aquaproj/aqua-installer@6ce1f8848ec8e61f14d57bd5d7597057a6dd187c # v3.0.1
        with:
          aqua_version: v2.29.0
        env:
          AQUA_GITHUB_TOKEN: ${{github.token}}
      - id: token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{secrets.APP_ID}}
          private_key: ${{secrets.APP_PRIVATE_KEY}}
          permissions: >-
            {
              "pull_requests": "write",
              "contents": "write"
            }
          repositories: >-
            [
              "${{github.event.repository.name}}"
            ]
      - run: git grep -l -E '^<!-- This file is generated by yodoc.' | xargs -r rm
      - run: yodoc run
      - run: echo branch="generate-doc-$(date +%Y%m%dT%H%M%S)" >> "$GITHUB_OUTPUT"
        id: branch
      - run: |
          git diff --name-only --diff-filter=D > /tmp/deleted_files.txt
          git diff --name-only --diff-filter=d > /tmp/changed_files.txt
          git ls-files --others --exclude-standard >> /tmp/changed_files.txt
          if test -s /tmp/changed_files.txt; then
            echo changed=true >> "$GITHUB_OUTPUT"
          fi
          if test -s /tmp/deleted_files.txt; then
            echo deleted=true >> "$GITHUB_OUTPUT"
          fi
        id: changed

      - run: |
          if [ "$CHANGED" = true ] && [ "$DELETED" = true ]; then
            ghcp commit \
              -r "$GITHUB_REPOSITORY" \
              -b "$BRANCH" \
              -m "docs: generate document by yodoc" \
              --delete-file /tmp/deleted_files.txt \
              $(cat /tmp/changed_files.txt)
            exit 0
          fi
          if [ "$CHANGED" = true ]; then
            ghcp commit \
              -r "$GITHUB_REPOSITORY" \
              -b "$BRANCH" \
              -m "docs: generate document by yodoc" \
              $(cat /tmp/changed_files.txt)
            exit 0
          fi
          ghcp commit \
            -r "$GITHUB_REPOSITORY" \
            -b "$BRANCH" \
            -m "docs: generate document by yodoc" \
            --delete-file /tmp/deleted_files.txt
        if: |
          steps.changed.outputs.changed == 'true' || steps.changed.outputs.deleted == 'true'
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
          BRANCH: "${{steps.branch.outputs.branch}}"
          CHANGED: "${{steps.changed.outputs.changed}}"
          DELETED: "${{steps.changed.outputs.deleted}}"
      - run: |
          body="This pull request was created by [yodoc](https://github.com/suzuki-shunsuke/yodoc).
          [GitHub Actions]($GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID)
          [Pull Request]($PR_URL)"
          gh pr create \
            -t 'docs: generate document by yodoc' \
            -b "$body" \
            -B main \
            -H "$BRANCH"
        if: |
          steps.changed.outputs.changed == 'true' || steps.changed.outputs.deleted == 'true'
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
          BRANCH: "${{steps.branch.outputs.branch}}"
          PR_URL: "${{needs.check-generate-doc.outputs.pr_url}}"

      - run: github-comment post -k fail-generate-doc
        if: failure()
        env:
          GITHUB_TOKEN: ${{github.token}}
          GH_COMMENT_PR_NUMBER: ${{needs.check-generate-doc.outputs.pr_number}}
